; ------------------------------------------------
; OCL_asm37128db8eaef653a_simd8_entry_0001.visa.ll
; ------------------------------------------------
; Function Attrs: convergent nounwind
define spir_kernel void @_ZTS4multIN4sycl3_V13ext6oneapi8bfloat16ELm8ELm8ELm16EE(%"class.sycl::_V1::ext::oneapi::bfloat16" addrspace(1)* align 2 %0, %"class.sycl::_V1::range"* byval(%"class.sycl::_V1::range") align 8 %1, %"class.sycl::_V1::range"* byval(%"class.sycl::_V1::range") align 8 %2, i64 %3, %"class.sycl::_V1::ext::oneapi::bfloat16" addrspace(1)* align 2 %4, %"class.sycl::_V1::range"* byval(%"class.sycl::_V1::range") align 8 %5, %"class.sycl::_V1::range"* byval(%"class.sycl::_V1::range") align 8 %6, float addrspace(1)* align 4 %7, %"class.sycl::_V1::range"* byval(%"class.sycl::_V1::range") align 8 %8, %"class.sycl::_V1::range"* byval(%"class.sycl::_V1::range") align 8 %9, <8 x i32> %r0, <8 x i32> %payloadHeader, <3 x i32> %localSize, <3 x i32> %enqueuedLocalSize, i16 %localIdX, i16 %localIdY, i16 %localIdZ, i8* %privateBase, i64 %const_reg_qword, i64 %const_reg_qword1, i64 %const_reg_qword2, i64 %const_reg_qword3, i64 %const_reg_qword4, i64 %const_reg_qword5, i64 %const_reg_qword6, i64 %const_reg_qword7, i64 %const_reg_qword8, i64 %const_reg_qword9, i64 %const_reg_qword10, i64 %const_reg_qword11, i32 %bufferOffset, i32 %bufferOffset12, i32 %bufferOffset13) #0 {
.preheader.preheader:
; BB0 :
  %10 = bitcast i64 %3 to <2 x i32>		; visa id: 2
  %11 = extractelement <2 x i32> %10, i32 0		; visa id: 3
  %12 = extractelement <2 x i32> %10, i32 1		; visa id: 3
  %13 = bitcast i64 %const_reg_qword1 to <2 x i32>		; visa id: 3
  %14 = extractelement <2 x i32> %13, i32 0		; visa id: 4
  %15 = extractelement <2 x i32> %13, i32 1		; visa id: 4
  %16 = bitcast i64 %const_reg_qword2 to <2 x i32>		; visa id: 4
  %17 = extractelement <2 x i32> %16, i32 0		; visa id: 5
  %18 = extractelement <2 x i32> %16, i32 1		; visa id: 5
  %19 = bitcast i64 %const_reg_qword3 to <2 x i32>		; visa id: 5
  %20 = extractelement <2 x i32> %19, i32 0		; visa id: 6
  %21 = extractelement <2 x i32> %19, i32 1		; visa id: 6
  %22 = bitcast i64 %const_reg_qword5 to <2 x i32>		; visa id: 6
  %23 = extractelement <2 x i32> %22, i32 0		; visa id: 7
  %24 = extractelement <2 x i32> %22, i32 1		; visa id: 7
  %25 = bitcast i64 %const_reg_qword6 to <2 x i32>		; visa id: 7
  %26 = extractelement <2 x i32> %25, i32 0		; visa id: 8
  %27 = extractelement <2 x i32> %25, i32 1		; visa id: 8
  %28 = bitcast i64 %const_reg_qword7 to <2 x i32>		; visa id: 8
  %29 = extractelement <2 x i32> %28, i32 0		; visa id: 9
  %30 = extractelement <2 x i32> %28, i32 1		; visa id: 9
  %31 = bitcast i64 %const_reg_qword9 to <2 x i32>		; visa id: 9
  %32 = extractelement <2 x i32> %31, i32 0		; visa id: 10
  %33 = extractelement <2 x i32> %31, i32 1		; visa id: 10
  %34 = bitcast i64 %const_reg_qword10 to <2 x i32>		; visa id: 10
  %35 = extractelement <2 x i32> %34, i32 0		; visa id: 11
  %36 = extractelement <2 x i32> %34, i32 1		; visa id: 11
  %37 = bitcast i64 %const_reg_qword11 to <2 x i32>		; visa id: 11
  %38 = extractelement <2 x i32> %37, i32 0		; visa id: 12
  %39 = extractelement <2 x i32> %37, i32 1		; visa id: 12
  %40 = extractelement <8 x i32> %payloadHeader, i32 0		; visa id: 12
  %41 = extractelement <8 x i32> %payloadHeader, i32 1		; visa id: 12
  %42 = extractelement <3 x i32> %enqueuedLocalSize, i32 0		; visa id: 12
  %43 = extractelement <3 x i32> %enqueuedLocalSize, i32 1		; visa id: 12
  %44 = extractelement <8 x i32> %r0, i32 1		; visa id: 12
  %45 = extractelement <8 x i32> %r0, i32 6		; visa id: 12
  %46 = call { i32, i32 } @llvm.genx.GenISA.mul.pair(i32 %17, i32 %18, i32 %14, i32 %15)
  %47 = extractvalue { i32, i32 } %46, 0		; visa id: 12
  %48 = extractvalue { i32, i32 } %46, 1		; visa id: 12
  %49 = shl i32 %47, 1		; visa id: 20
  %50 = add i32 %49, %bufferOffset		; visa id: 21
  %51 = shl i32 %20, 1		; visa id: 22
  %52 = add i32 %50, %51		; visa id: 23
  %53 = call { i32, i32 } @llvm.genx.GenISA.mul.pair(i32 %26, i32 %27, i32 %23, i32 %24)
  %54 = extractvalue { i32, i32 } %53, 0		; visa id: 24
  %55 = extractvalue { i32, i32 } %53, 1		; visa id: 24
  %56 = shl i32 %54, 1		; visa id: 32
  %57 = add i32 %56, %bufferOffset12		; visa id: 33
  %58 = shl i32 %29, 1		; visa id: 34
  %59 = add i32 %57, %58		; visa id: 35
  %60 = call { i32, i32 } @llvm.genx.GenISA.mul.pair(i32 %35, i32 %36, i32 %32, i32 %33)
  %61 = extractvalue { i32, i32 } %60, 0		; visa id: 36
  %62 = extractvalue { i32, i32 } %60, 1		; visa id: 36
  %63 = shl i32 %61, 2		; visa id: 44
  %64 = add i32 %63, %bufferOffset13		; visa id: 45
  %65 = shl i32 %38, 2		; visa id: 46
  %66 = add i32 %64, %65		; visa id: 47
  %67 = mul i32 %43, %45		; visa id: 48
  %localIdY15 = zext i16 %localIdY to i32		; visa id: 49
  %68 = add i32 %67, %localIdY15
  %69 = add i32 %68, %41		; visa id: 50
  %70 = call i32 @llvm.genx.GenISA.WaveShuffleIndex.i32.i32.i32(i32 %69, i32 0, i32 0)
  %71 = mul i32 %42, %44		; visa id: 51
  %localIdX21 = zext i16 %localIdX to i32		; visa id: 52
  %72 = add i32 %71, %localIdX21
  %73 = add i32 %72, %40		; visa id: 53
  %74 = zext i16 %localIdY to i32		; visa id: 54
  %75 = insertelement <2 x i32> undef, i32 %74, i32 0		; visa id: 55
  %76 = insertelement <2 x i32> %75, i32 0, i32 1		; visa id: 56
  %77 = bitcast <2 x i32> %76 to i64		; visa id: 57
  %78 = call i64 @llvm.genx.GenISA.WaveShuffleIndex.i64.i32.i32(i64 %77, i32 0, i32 0)		; visa id: 59
  %79 = bitcast i64 %78 to <2 x i32>		; visa id: 61
  %80 = extractelement <2 x i32> %79, i32 0		; visa id: 62
  %81 = extractelement <2 x i32> %79, i32 1		; visa id: 62
  %82 = call { i32, i32 } @llvm.genx.GenISA.sub.pair(i32 %70, i32 0, i32 %80, i32 %81)
  %83 = extractvalue { i32, i32 } %82, 0		; visa id: 62
  %84 = extractvalue { i32, i32 } %82, 1		; visa id: 62
  %85 = zext i16 %localIdX to i32		; visa id: 64
  %86 = call { i32, i32 } @llvm.genx.GenISA.sub.pair(i32 %73, i32 0, i32 %85, i32 0)
  %87 = extractvalue { i32, i32 } %86, 0		; visa id: 65
  %88 = extractvalue { i32, i32 } %86, 1		; visa id: 65
  %89 = call { i32, i32 } @llvm.genx.GenISA.add.pair(i32 %47, i32 %48, i32 %20, i32 %21)
  %90 = extractvalue { i32, i32 } %89, 0		; visa id: 67
  %91 = extractvalue { i32, i32 } %89, 1		; visa id: 67
  %92 = call { i32, i32 } @llvm.genx.GenISA.sub.pair(i32 0, i32 0, i32 %90, i32 %91)
  %93 = extractvalue { i32, i32 } %92, 0		; visa id: 69
  %94 = shl i32 %93, 1		; visa id: 70
  %95 = add i32 %52, %94		; visa id: 71
  %96 = or i32 %88, %12		; visa id: 72
  %97 = icmp ult i32 %96, 1		; visa id: 73
  br i1 %97, label %212, label %98, !stats.blockFrequency.digits !441, !stats.blockFrequency.scale !442		; visa id: 74

98:                                               ; preds = %.preheader.preheader
; BB1 :
  %99 = lshr i32 %11, 20		; visa id: 76
  %100 = shl i32 %12, 12		; visa id: 77
  %101 = lshr i32 %11, 20		; visa id: 78
  %102 = or i32 %101, %100		; visa id: 79
  %103 = lshr i32 %12, 8		; visa id: 80
  %104 = uitofp i32 %103 to float		; visa id: 81
  %105 = and i32 %102, 1044480
  %106 = or i32 %105, %99		; visa id: 82
  %107 = uitofp i32 %106 to float		; visa id: 84
  %108 = and i32 %11, 1048575		; visa id: 85
  %109 = uitofp i32 %108 to float		; visa id: 86
  %110 = call float @llvm.fma.f32(float %107, float 0x4130000000000000, float %109) #4		; visa id: 87
  %111 = call float @llvm.fma.f32(float %104, float 0x4270000000000000, float %110) #4		; visa id: 89
  %112 = lshr i32 %88, 8		; visa id: 91
  %113 = uitofp i32 %112 to float		; visa id: 92
  %114 = fdiv float 1.000000e+00, %111		; visa id: 93
  %115 = call float @llvm.fma.f32(float %114, float 0xBE9C000000000000, float %114) #4		; visa id: 94
  %116 = fmul float %115, %113		; visa id: 96
  %117 = call float @llvm.floor.f32(float %116) #4		; visa id: 97
  %118 = fsub float 0.000000e+00, %109
  %119 = call float @llvm.fma.f32(float %118, float %117, float %113) #4		; visa id: 98
  %120 = fmul float %107, 0xC130000000000000		; visa id: 99
  %121 = call float @llvm.fma.f32(float %120, float %117, float %119) #4		; visa id: 100
  %122 = lshr i32 %87, 20		; visa id: 101
  %123 = shl i32 %88, 12		; visa id: 102
  %124 = lshr i32 %87, 20		; visa id: 103
  %125 = or i32 %124, %123		; visa id: 104
  %126 = and i32 %125, 1044480
  %127 = or i32 %126, %122		; visa id: 105
  %128 = uitofp i32 %127 to float		; visa id: 106
  %129 = call float @llvm.fma.f32(float %121, float 0x4130000000000000, float %128) #4		; visa id: 107
  %130 = fmul float %115, %129		; visa id: 108
  %131 = call float @llvm.floor.f32(float %130) #4		; visa id: 109
  %132 = fsub float 0.000000e+00, %107
  %133 = call float @llvm.fma.f32(float %132, float %131, float %121) #4		; visa id: 110
  %134 = fmul float %104, 0xC130000000000000		; visa id: 111
  %135 = call float @llvm.fma.f32(float %134, float %131, float %133) #4		; visa id: 112
  %136 = fmul float %109, 0x3EB0000000000000		; visa id: 113
  %137 = fmul float %136, %131		; visa id: 114
  %138 = call float @llvm.floor.f32(float %137) #4		; visa id: 115
  %139 = fsub float 0.000000e+00, %138
  %140 = call float @llvm.fma.f32(float %131, float %136, float %139) #4		; visa id: 116
  %141 = call float @llvm.fma.f32(float %138, float -1.000000e+00, float %135) #4		; visa id: 117
  %142 = call float @llvm.fma.f32(float %140, float 0xC130000000000000, float %128) #4		; visa id: 119
  %143 = and i32 %87, 1048575		; visa id: 121
  %144 = uitofp i32 %143 to float		; visa id: 122
  %145 = call float @llvm.fma.f32(float %142, float 0x4130000000000000, float %144) #4		; visa id: 123
  %146 = call float @llvm.fma.f32(float %141, float 0x4270000000000000, float %145) #4		; visa id: 124
  %147 = fmul float %115, %146		; visa id: 125
  %148 = call float @llvm.floor.f32(float %147) #4		; visa id: 126
  %149 = fsub float 0.000000e+00, %104
  %150 = call float @llvm.fma.f32(float %149, float %148, float %141) #4		; visa id: 127
  %151 = fmul float %136, %148		; visa id: 128
  %152 = call float @llvm.floor.f32(float %151) #4		; visa id: 129
  %153 = fsub float 0.000000e+00, %152
  %154 = call float @llvm.fma.f32(float %148, float %136, float %153) #4		; visa id: 130
  %155 = call float @llvm.fma.f32(float %152, float -1.000000e+00, float %142) #4		; visa id: 131
  %156 = call float @llvm.fma.f32(float %154, float 0xC130000000000000, float %144) #4		; visa id: 132
  %157 = fmul float %107, 0x3EB0000000000000		; visa id: 133
  %158 = fmul float %157, %148		; visa id: 134
  %159 = call float @llvm.floor.f32(float %158) #4		; visa id: 135
  %160 = fsub float 0.000000e+00, %159
  %161 = call float @llvm.fma.f32(float %148, float %157, float %160) #4		; visa id: 136
  %162 = call float @llvm.fma.f32(float %159, float -1.000000e+00, float %150) #4		; visa id: 137
  %163 = call float @llvm.fma.f32(float %161, float 0xC130000000000000, float %155) #4		; visa id: 138
  %164 = fptosi float %117 to i32		; visa id: 139
  %165 = fptosi float %131 to i32		; visa id: 140
  %166 = fptosi float %148 to i32		; visa id: 141
  %167 = call float @llvm.fma.f32(float %162, float 0x4130000000000000, float %163) #4		; visa id: 142
  %168 = call float @llvm.fma.f32(float %167, float 0x4130000000000000, float %156) #4		; visa id: 143
  %169 = fmul float %115, %168		; visa id: 144
  %170 = call float @llvm.floor.f32(float %169) #4		; visa id: 145
  %171 = fsub float 0.000000e+00, %170
  %172 = call float @llvm.fma.f32(float %171, float %104, float %162) #4		; visa id: 146
  %173 = call float @llvm.fma.f32(float %171, float %107, float %163) #4		; visa id: 147
  %174 = call float @llvm.fma.f32(float %171, float %109, float %156) #4		; visa id: 148
  %175 = fptosi float %170 to i32		; visa id: 149
  %176 = add i32 %175, %166
  %177 = fptosi float %173 to i32		; visa id: 150
  %178 = fptosi float %174 to i32		; visa id: 151
  %179 = ashr i32 %177, 31		; visa id: 152
  %180 = shl i32 %177, 20		; visa id: 153
  %181 = lshr i32 %177, 12		; visa id: 154
  %182 = shl i32 %179, 20		; visa id: 155
  %183 = or i32 %182, %181		; visa id: 156
  %184 = ashr i32 %178, 31		; visa id: 157
  %185 = fmul float %172, 0x3DF0000000000000		; visa id: 158
  %186 = call float @llvm.trunc.f32(float %185)		; visa id: 159
  %187 = call float @llvm.fma.f32(float %186, float 0xC1F0000000000000, float %172)		; visa id: 160
  %188 = fptoui float %187 to i32		; visa id: 162
  %189 = shl i32 %188, 8		; visa id: 163
  %190 = call { i32, i32 } @llvm.genx.GenISA.add.pair(i32 0, i32 %189, i32 %178, i32 %184)
  %191 = extractvalue { i32, i32 } %190, 0		; visa id: 164
  %192 = extractvalue { i32, i32 } %190, 1		; visa id: 164
  %193 = call { i32, i32 } @llvm.genx.GenISA.add.pair(i32 %191, i32 %192, i32 %180, i32 %183)
  %194 = extractvalue { i32, i32 } %193, 0		; visa id: 166
  %195 = extractvalue { i32, i32 } %193, 1		; visa id: 166
  %196 = shl i32 %164, 8		; visa id: 168
  %197 = shl i32 %165, 20		; visa id: 169
  %198 = lshr i32 %165, 12		; visa id: 170
  %199 = call { i32, i32 } @llvm.genx.GenISA.add.pair(i32 %197, i32 %198, i32 0, i32 %196)
  %200 = extractvalue { i32, i32 } %199, 0		; visa id: 171
  %201 = extractvalue { i32, i32 } %199, 1		; visa id: 171
  %202 = icmp eq i32 %195, %12
  %203 = icmp uge i32 %194, %11		; visa id: 173
  %204 = and i1 %202, %203		; visa id: 174
  %205 = icmp ugt i32 %195, %12
  %206 = or i1 %204, %205		; visa id: 176
  %207 = sext i1 %206 to i32		; visa id: 178
  %208 = sub i32 0, %207
  %209 = add i32 %176, %208		; visa id: 179
  %210 = call { i32, i32 } @llvm.genx.GenISA.add.pair(i32 %200, i32 %201, i32 %209, i32 0)
  %211 = extractvalue { i32, i32 } %210, 0		; visa id: 180
  br label %__igcbuiltin_u64_udiv_sp.exit, !stats.blockFrequency.digits !441, !stats.blockFrequency.scale !443		; visa id: 181

212:                                              ; preds = %.preheader.preheader
; BB2 :
  %tobool.i.i = icmp eq i32 %11, 0		; visa id: 183
  br i1 %tobool.i.i, label %.precompiled_u32divrem_sp.exit.i_crit_edge, label %if.end.i.i, !stats.blockFrequency.digits !441, !stats.blockFrequency.scale !443		; visa id: 184

if.end.i.i:                                       ; preds = %212
; BB3 :
  %213 = call float @llvm.genx.GenISA.uitof.rtz.f32.i32(i32 %11) #4		; visa id: 186
  %conv.i.i = fptoui float %213 to i32		; visa id: 188
  %sub.i.i = sub i32 %11, %conv.i.i		; visa id: 189
  %214 = call float @llvm.genx.GenISA.uitof.rtz.f32.i32(i32 %87) #4		; visa id: 190
  %div.i.i = fdiv float 1.000000e+00, %213, !fpmath !444		; visa id: 191
  %215 = call float @llvm.genx.GenISA.fma.rtz.f32.f32.f32.f32(float %div.i.i, float 0xBE98000000000000, float %div.i.i) #4		; visa id: 192
  %216 = call float @llvm.genx.GenISA.mul.rtz.f32.f32.f32(float %214, float %215) #4		; visa id: 193
  %conv3.i.i = fptoui float %214 to i32		; visa id: 194
  %sub4.i.i = sub i32 %87, %conv3.i.i		; visa id: 195
  %conv8.i.i = fptoui float %216 to i32		; visa id: 196
  %217 = call float @llvm.genx.GenISA.uitof.rtz.f32.i32(i32 %sub.i.i) #4		; visa id: 197
  %218 = call float @llvm.genx.GenISA.uitof.rtz.f32.i32(i32 %sub4.i.i) #4		; visa id: 198
  %219 = call float @llvm.genx.GenISA.uitof.rtz.f32.i32(i32 %conv8.i.i) #4		; visa id: 199
  %220 = fsub float 0.000000e+00, %213		; visa id: 200
  %221 = call float @llvm.genx.GenISA.fma.rtz.f32.f32.f32.f32(float %220, float %219, float %214) #4		; visa id: 201
  %222 = fsub float 0.000000e+00, %217		; visa id: 202
  %223 = call float @llvm.genx.GenISA.fma.rtz.f32.f32.f32.f32(float %222, float %219, float %218) #4		; visa id: 203
  %224 = call float @llvm.genx.GenISA.add.rtz.f32.f32.f32(float %221, float %223) #4		; visa id: 204
  %225 = call float @llvm.genx.GenISA.mul.rtz.f32.f32.f32(float %215, float %224) #4		; visa id: 205
  %conv16.i.i = fptoui float %225 to i32		; visa id: 207
  %add.i.i = add i32 %conv16.i.i, %conv8.i.i		; visa id: 208
  %mul.i.i = mul i32 %add.i.i, %11		; visa id: 209
  %sub17.i.i = sub i32 %87, %mul.i.i		; visa id: 210
  %cmp.i.i = icmp uge i32 %sub17.i.i, %11
  %226 = sext i1 %cmp.i.i to i32		; visa id: 211
  %227 = sub i32 0, %226
  %add19.i.i = add i32 %add.i.i, %227		; visa id: 212
  br label %precompiled_u32divrem_sp.exit.i, !stats.blockFrequency.digits !445, !stats.blockFrequency.scale !446		; visa id: 213

.precompiled_u32divrem_sp.exit.i_crit_edge:       ; preds = %212
; BB4 :
  br label %precompiled_u32divrem_sp.exit.i, !stats.blockFrequency.digits !447, !stats.blockFrequency.scale !448		; visa id: 216

precompiled_u32divrem_sp.exit.i:                  ; preds = %.precompiled_u32divrem_sp.exit.i_crit_edge, %if.end.i.i
; BB:
  %retval.0.i.i = phi i32 [ %add19.i.i, %if.end.i.i ], [ -1, %.precompiled_u32divrem_sp.exit.i_crit_edge ]
  br label %__igcbuiltin_u64_udiv_sp.exit, !stats.blockFrequency.digits !441, !stats.blockFrequency.scale !443

__igcbuiltin_u64_udiv_sp.exit:                    ; preds = %precompiled_u32divrem_sp.exit.i, %98
; BB6 :
  %228 = phi i32 [ %retval.0.i.i, %precompiled_u32divrem_sp.exit.i ], [ %211, %98 ]
  %229 = shl i32 %228, 4		; visa id: 217
  %230 = shl i32 %229, 1		; visa id: 218
  %231 = add i32 %95, %230		; visa id: 219
  %232 = call { i32, i32 } @llvm.genx.GenISA.add.pair(i32 %54, i32 %55, i32 %29, i32 %30)
  %233 = extractvalue { i32, i32 } %232, 0		; visa id: 220
  %234 = extractvalue { i32, i32 } %232, 1		; visa id: 220
  %235 = call { i32, i32 } @llvm.genx.GenISA.sub.pair(i32 0, i32 0, i32 %233, i32 %234)
  %236 = extractvalue { i32, i32 } %235, 0		; visa id: 222
  %237 = shl i32 %236, 1		; visa id: 223
  %238 = add i32 %59, %237		; visa id: 224
  %239 = shl i32 %83, 9		; visa id: 225
  %240 = lshr i32 %83, 23		; visa id: 226
  %241 = shl i32 %84, 9		; visa id: 227
  %242 = or i32 %241, %240		; visa id: 228
  %243 = inttoptr i32 %231 to i32 addrspace(131072)*
  %244 = call i32 @llvm.genx.GenISA.simdBlockRead.i32.p131072i32(i32 addrspace(131072)* %243)		; visa id: 229
  %245 = add i32 %231, 64		; visa id: 231
  %246 = inttoptr i32 %245 to i32 addrspace(131072)*
  %247 = call i32 @llvm.genx.GenISA.simdBlockRead.i32.p131072i32(i32 addrspace(131072)* %246)		; visa id: 232
  %248 = add i32 %231, 128		; visa id: 234
  %249 = inttoptr i32 %248 to i32 addrspace(131072)*
  %250 = call i32 @llvm.genx.GenISA.simdBlockRead.i32.p131072i32(i32 addrspace(131072)* %249)		; visa id: 235
  %251 = add i32 %231, 192		; visa id: 237
  %252 = inttoptr i32 %251 to i32 addrspace(131072)*
  %253 = call i32 @llvm.genx.GenISA.simdBlockRead.i32.p131072i32(i32 addrspace(131072)* %252)		; visa id: 238
  %254 = add i32 %231, 256		; visa id: 240
  %255 = inttoptr i32 %254 to i32 addrspace(131072)*
  %256 = call i32 @llvm.genx.GenISA.simdBlockRead.i32.p131072i32(i32 addrspace(131072)* %255)		; visa id: 241
  %257 = add i32 %231, 320		; visa id: 243
  %258 = inttoptr i32 %257 to i32 addrspace(131072)*
  %259 = call i32 @llvm.genx.GenISA.simdBlockRead.i32.p131072i32(i32 addrspace(131072)* %258)		; visa id: 244
  %260 = add i32 %231, 384		; visa id: 246
  %261 = inttoptr i32 %260 to i32 addrspace(131072)*
  %262 = call i32 @llvm.genx.GenISA.simdBlockRead.i32.p131072i32(i32 addrspace(131072)* %261)		; visa id: 247
  %263 = add i32 %231, 448		; visa id: 249
  %264 = inttoptr i32 %263 to i32 addrspace(131072)*
  %265 = call i32 @llvm.genx.GenISA.simdBlockRead.i32.p131072i32(i32 addrspace(131072)* %264)		; visa id: 250
  %266 = insertelement <8 x i32> undef, i32 %244, i32 0		; visa id: 252
  %267 = insertelement <8 x i32> %266, i32 %247, i32 1		; visa id: 252
  %268 = insertelement <8 x i32> %267, i32 %250, i32 2		; visa id: 252
  %269 = insertelement <8 x i32> %268, i32 %253, i32 3		; visa id: 252
  %270 = insertelement <8 x i32> %269, i32 %256, i32 4		; visa id: 252
  %271 = insertelement <8 x i32> %270, i32 %259, i32 5		; visa id: 252
  %272 = insertelement <8 x i32> %271, i32 %262, i32 6		; visa id: 252
  %273 = insertelement <8 x i32> %272, i32 %265, i32 7		; visa id: 252
  %274 = shl i32 %239, 1		; visa id: 252
  %275 = add i32 %238, %274		; visa id: 253
  %276 = inttoptr i32 %275 to i32 addrspace(131073)*
  %277 = call i32 @llvm.genx.GenISA.simdBlockRead.i32.p131073i32(i32 addrspace(131073)* %276)		; visa id: 254
  %278 = add i32 %275, 64		; visa id: 256
  %279 = inttoptr i32 %278 to i32 addrspace(131073)*
  %280 = call i32 @llvm.genx.GenISA.simdBlockRead.i32.p131073i32(i32 addrspace(131073)* %279)		; visa id: 257
  %281 = add i32 %275, 128		; visa id: 259
  %282 = inttoptr i32 %281 to i32 addrspace(131073)*
  %283 = call i32 @llvm.genx.GenISA.simdBlockRead.i32.p131073i32(i32 addrspace(131073)* %282)		; visa id: 260
  %284 = add i32 %275, 192		; visa id: 262
  %285 = inttoptr i32 %284 to i32 addrspace(131073)*
  %286 = call i32 @llvm.genx.GenISA.simdBlockRead.i32.p131073i32(i32 addrspace(131073)* %285)		; visa id: 263
  %287 = add i32 %275, 256		; visa id: 265
  %288 = inttoptr i32 %287 to i32 addrspace(131073)*
  %289 = call i32 @llvm.genx.GenISA.simdBlockRead.i32.p131073i32(i32 addrspace(131073)* %288)		; visa id: 266
  %290 = add i32 %275, 320		; visa id: 268
  %291 = inttoptr i32 %290 to i32 addrspace(131073)*
  %292 = call i32 @llvm.genx.GenISA.simdBlockRead.i32.p131073i32(i32 addrspace(131073)* %291)		; visa id: 269
  %293 = add i32 %275, 384		; visa id: 271
  %294 = inttoptr i32 %293 to i32 addrspace(131073)*
  %295 = call i32 @llvm.genx.GenISA.simdBlockRead.i32.p131073i32(i32 addrspace(131073)* %294)		; visa id: 272
  %296 = add i32 %275, 448		; visa id: 274
  %297 = inttoptr i32 %296 to i32 addrspace(131073)*
  %298 = call i32 @llvm.genx.GenISA.simdBlockRead.i32.p131073i32(i32 addrspace(131073)* %297)		; visa id: 275
  %299 = insertelement <8 x i32> undef, i32 %277, i32 0		; visa id: 277
  %300 = insertelement <8 x i32> %299, i32 %280, i32 1		; visa id: 277
  %301 = insertelement <8 x i32> %300, i32 %283, i32 2		; visa id: 277
  %302 = insertelement <8 x i32> %301, i32 %286, i32 3		; visa id: 277
  %303 = insertelement <8 x i32> %302, i32 %289, i32 4		; visa id: 277
  %304 = insertelement <8 x i32> %303, i32 %292, i32 5		; visa id: 277
  %305 = insertelement <8 x i32> %304, i32 %295, i32 6		; visa id: 277
  %306 = insertelement <8 x i32> %305, i32 %298, i32 7		; visa id: 277
  %307 = call <8 x float> @llvm.genx.GenISA.sub.group.dpas.v8f32.v8f32.v8i32.v8i32(<8 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <8 x i32> %306, <8 x i32> %273, i32 9, i32 9, i32 8, i32 8, i1 false)		; visa id: 277
  %308 = call { i32, i32 } @llvm.genx.GenISA.add.pair(i32 %239, i32 %242, i32 256, i32 0)
  %309 = extractvalue { i32, i32 } %308, 0		; visa id: 287
  %310 = shl i32 %309, 1		; visa id: 288
  %311 = add i32 %238, %310		; visa id: 289
  %312 = inttoptr i32 %311 to i32 addrspace(131073)*
  %313 = call i32 @llvm.genx.GenISA.simdBlockRead.i32.p131073i32(i32 addrspace(131073)* %312)		; visa id: 290
  %314 = add i32 %311, 64		; visa id: 292
  %315 = inttoptr i32 %314 to i32 addrspace(131073)*
  %316 = call i32 @llvm.genx.GenISA.simdBlockRead.i32.p131073i32(i32 addrspace(131073)* %315)		; visa id: 293
  %317 = add i32 %311, 128		; visa id: 295
  %318 = inttoptr i32 %317 to i32 addrspace(131073)*
  %319 = call i32 @llvm.genx.GenISA.simdBlockRead.i32.p131073i32(i32 addrspace(131073)* %318)		; visa id: 296
  %320 = add i32 %311, 192		; visa id: 298
  %321 = inttoptr i32 %320 to i32 addrspace(131073)*
  %322 = call i32 @llvm.genx.GenISA.simdBlockRead.i32.p131073i32(i32 addrspace(131073)* %321)		; visa id: 299
  %323 = add i32 %311, 256		; visa id: 301
  %324 = inttoptr i32 %323 to i32 addrspace(131073)*
  %325 = call i32 @llvm.genx.GenISA.simdBlockRead.i32.p131073i32(i32 addrspace(131073)* %324)		; visa id: 302
  %326 = add i32 %311, 320		; visa id: 304
  %327 = inttoptr i32 %326 to i32 addrspace(131073)*
  %328 = call i32 @llvm.genx.GenISA.simdBlockRead.i32.p131073i32(i32 addrspace(131073)* %327)		; visa id: 305
  %329 = add i32 %311, 384		; visa id: 307
  %330 = inttoptr i32 %329 to i32 addrspace(131073)*
  %331 = call i32 @llvm.genx.GenISA.simdBlockRead.i32.p131073i32(i32 addrspace(131073)* %330)		; visa id: 308
  %332 = add i32 %311, 448		; visa id: 310
  %333 = inttoptr i32 %332 to i32 addrspace(131073)*
  %334 = call i32 @llvm.genx.GenISA.simdBlockRead.i32.p131073i32(i32 addrspace(131073)* %333)		; visa id: 311
  %335 = insertelement <8 x i32> undef, i32 %313, i32 0		; visa id: 313
  %336 = insertelement <8 x i32> %335, i32 %316, i32 1		; visa id: 313
  %337 = insertelement <8 x i32> %336, i32 %319, i32 2		; visa id: 313
  %338 = insertelement <8 x i32> %337, i32 %322, i32 3		; visa id: 313
  %339 = insertelement <8 x i32> %338, i32 %325, i32 4		; visa id: 313
  %340 = insertelement <8 x i32> %339, i32 %328, i32 5		; visa id: 313
  %341 = insertelement <8 x i32> %340, i32 %331, i32 6		; visa id: 313
  %342 = insertelement <8 x i32> %341, i32 %334, i32 7		; visa id: 313
  %343 = call <8 x float> @llvm.genx.GenISA.sub.group.dpas.v8f32.v8f32.v8i32.v8i32(<8 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <8 x i32> %342, <8 x i32> %273, i32 9, i32 9, i32 8, i32 8, i1 false)		; visa id: 313
  %344 = add i32 %231, 512		; visa id: 323
  %345 = inttoptr i32 %344 to i32 addrspace(131072)*
  %346 = call i32 @llvm.genx.GenISA.simdBlockRead.i32.p131072i32(i32 addrspace(131072)* %345)		; visa id: 324
  %347 = add i32 %231, 576		; visa id: 326
  %348 = inttoptr i32 %347 to i32 addrspace(131072)*
  %349 = call i32 @llvm.genx.GenISA.simdBlockRead.i32.p131072i32(i32 addrspace(131072)* %348)		; visa id: 327
  %350 = add i32 %231, 640		; visa id: 329
  %351 = inttoptr i32 %350 to i32 addrspace(131072)*
  %352 = call i32 @llvm.genx.GenISA.simdBlockRead.i32.p131072i32(i32 addrspace(131072)* %351)		; visa id: 330
  %353 = add i32 %231, 704		; visa id: 332
  %354 = inttoptr i32 %353 to i32 addrspace(131072)*
  %355 = call i32 @llvm.genx.GenISA.simdBlockRead.i32.p131072i32(i32 addrspace(131072)* %354)		; visa id: 333
  %356 = add i32 %231, 768		; visa id: 335
  %357 = inttoptr i32 %356 to i32 addrspace(131072)*
  %358 = call i32 @llvm.genx.GenISA.simdBlockRead.i32.p131072i32(i32 addrspace(131072)* %357)		; visa id: 336
  %359 = add i32 %231, 832		; visa id: 338
  %360 = inttoptr i32 %359 to i32 addrspace(131072)*
  %361 = call i32 @llvm.genx.GenISA.simdBlockRead.i32.p131072i32(i32 addrspace(131072)* %360)		; visa id: 339
  %362 = add i32 %231, 896		; visa id: 341
  %363 = inttoptr i32 %362 to i32 addrspace(131072)*
  %364 = call i32 @llvm.genx.GenISA.simdBlockRead.i32.p131072i32(i32 addrspace(131072)* %363)		; visa id: 342
  %365 = add i32 %231, 960		; visa id: 344
  %366 = inttoptr i32 %365 to i32 addrspace(131072)*
  %367 = call i32 @llvm.genx.GenISA.simdBlockRead.i32.p131072i32(i32 addrspace(131072)* %366)		; visa id: 345
  %368 = insertelement <8 x i32> undef, i32 %346, i32 0		; visa id: 347
  %369 = insertelement <8 x i32> %368, i32 %349, i32 1		; visa id: 347
  %370 = insertelement <8 x i32> %369, i32 %352, i32 2		; visa id: 347
  %371 = insertelement <8 x i32> %370, i32 %355, i32 3		; visa id: 347
  %372 = insertelement <8 x i32> %371, i32 %358, i32 4		; visa id: 347
  %373 = insertelement <8 x i32> %372, i32 %361, i32 5		; visa id: 347
  %374 = insertelement <8 x i32> %373, i32 %364, i32 6		; visa id: 347
  %375 = insertelement <8 x i32> %374, i32 %367, i32 7		; visa id: 347
  %376 = add i32 %238, 32		; visa id: 347
  %377 = add i32 %376, %274		; visa id: 348
  %378 = inttoptr i32 %377 to i32 addrspace(131073)*
  %379 = call i32 @llvm.genx.GenISA.simdBlockRead.i32.p131073i32(i32 addrspace(131073)* %378)		; visa id: 349
  %380 = add i32 %377, 64		; visa id: 351
  %381 = inttoptr i32 %380 to i32 addrspace(131073)*
  %382 = call i32 @llvm.genx.GenISA.simdBlockRead.i32.p131073i32(i32 addrspace(131073)* %381)		; visa id: 352
  %383 = add i32 %377, 128		; visa id: 354
  %384 = inttoptr i32 %383 to i32 addrspace(131073)*
  %385 = call i32 @llvm.genx.GenISA.simdBlockRead.i32.p131073i32(i32 addrspace(131073)* %384)		; visa id: 355
  %386 = add i32 %377, 192		; visa id: 357
  %387 = inttoptr i32 %386 to i32 addrspace(131073)*
  %388 = call i32 @llvm.genx.GenISA.simdBlockRead.i32.p131073i32(i32 addrspace(131073)* %387)		; visa id: 358
  %389 = add i32 %377, 256		; visa id: 360
  %390 = inttoptr i32 %389 to i32 addrspace(131073)*
  %391 = call i32 @llvm.genx.GenISA.simdBlockRead.i32.p131073i32(i32 addrspace(131073)* %390)		; visa id: 361
  %392 = add i32 %377, 320		; visa id: 363
  %393 = inttoptr i32 %392 to i32 addrspace(131073)*
  %394 = call i32 @llvm.genx.GenISA.simdBlockRead.i32.p131073i32(i32 addrspace(131073)* %393)		; visa id: 364
  %395 = add i32 %377, 384		; visa id: 366
  %396 = inttoptr i32 %395 to i32 addrspace(131073)*
  %397 = call i32 @llvm.genx.GenISA.simdBlockRead.i32.p131073i32(i32 addrspace(131073)* %396)		; visa id: 367
  %398 = add i32 %377, 448		; visa id: 369
  %399 = inttoptr i32 %398 to i32 addrspace(131073)*
  %400 = call i32 @llvm.genx.GenISA.simdBlockRead.i32.p131073i32(i32 addrspace(131073)* %399)		; visa id: 370
  %401 = insertelement <8 x i32> undef, i32 %379, i32 0		; visa id: 372
  %402 = insertelement <8 x i32> %401, i32 %382, i32 1		; visa id: 372
  %403 = insertelement <8 x i32> %402, i32 %385, i32 2		; visa id: 372
  %404 = insertelement <8 x i32> %403, i32 %388, i32 3		; visa id: 372
  %405 = insertelement <8 x i32> %404, i32 %391, i32 4		; visa id: 372
  %406 = insertelement <8 x i32> %405, i32 %394, i32 5		; visa id: 372
  %407 = insertelement <8 x i32> %406, i32 %397, i32 6		; visa id: 372
  %408 = insertelement <8 x i32> %407, i32 %400, i32 7		; visa id: 372
  %409 = call <8 x float> @llvm.genx.GenISA.sub.group.dpas.v8f32.v8f32.v8i32.v8i32(<8 x float> %307, <8 x i32> %408, <8 x i32> %375, i32 9, i32 9, i32 8, i32 8, i1 false)		; visa id: 372
  %410 = add i32 %376, %310		; visa id: 373
  %411 = inttoptr i32 %410 to i32 addrspace(131073)*
  %412 = call i32 @llvm.genx.GenISA.simdBlockRead.i32.p131073i32(i32 addrspace(131073)* %411)		; visa id: 374
  %413 = add i32 %410, 64		; visa id: 376
  %414 = inttoptr i32 %413 to i32 addrspace(131073)*
  %415 = call i32 @llvm.genx.GenISA.simdBlockRead.i32.p131073i32(i32 addrspace(131073)* %414)		; visa id: 377
  %416 = add i32 %410, 128		; visa id: 379
  %417 = inttoptr i32 %416 to i32 addrspace(131073)*
  %418 = call i32 @llvm.genx.GenISA.simdBlockRead.i32.p131073i32(i32 addrspace(131073)* %417)		; visa id: 380
  %419 = add i32 %410, 192		; visa id: 382
  %420 = inttoptr i32 %419 to i32 addrspace(131073)*
  %421 = call i32 @llvm.genx.GenISA.simdBlockRead.i32.p131073i32(i32 addrspace(131073)* %420)		; visa id: 383
  %422 = add i32 %410, 256		; visa id: 385
  %423 = inttoptr i32 %422 to i32 addrspace(131073)*
  %424 = call i32 @llvm.genx.GenISA.simdBlockRead.i32.p131073i32(i32 addrspace(131073)* %423)		; visa id: 386
  %425 = add i32 %410, 320		; visa id: 388
  %426 = inttoptr i32 %425 to i32 addrspace(131073)*
  %427 = call i32 @llvm.genx.GenISA.simdBlockRead.i32.p131073i32(i32 addrspace(131073)* %426)		; visa id: 389
  %428 = add i32 %410, 384		; visa id: 391
  %429 = inttoptr i32 %428 to i32 addrspace(131073)*
  %430 = call i32 @llvm.genx.GenISA.simdBlockRead.i32.p131073i32(i32 addrspace(131073)* %429)		; visa id: 392
  %431 = add i32 %410, 448		; visa id: 394
  %432 = inttoptr i32 %431 to i32 addrspace(131073)*
  %433 = call i32 @llvm.genx.GenISA.simdBlockRead.i32.p131073i32(i32 addrspace(131073)* %432)		; visa id: 395
  %434 = insertelement <8 x i32> undef, i32 %412, i32 0		; visa id: 397
  %435 = insertelement <8 x i32> %434, i32 %415, i32 1		; visa id: 397
  %436 = insertelement <8 x i32> %435, i32 %418, i32 2		; visa id: 397
  %437 = insertelement <8 x i32> %436, i32 %421, i32 3		; visa id: 397
  %438 = insertelement <8 x i32> %437, i32 %424, i32 4		; visa id: 397
  %439 = insertelement <8 x i32> %438, i32 %427, i32 5		; visa id: 397
  %440 = insertelement <8 x i32> %439, i32 %430, i32 6		; visa id: 397
  %441 = insertelement <8 x i32> %440, i32 %433, i32 7		; visa id: 397
  %442 = call <8 x float> @llvm.genx.GenISA.sub.group.dpas.v8f32.v8f32.v8i32.v8i32(<8 x float> %343, <8 x i32> %441, <8 x i32> %375, i32 9, i32 9, i32 8, i32 8, i1 false)		; visa id: 397
  %443 = call { i32, i32 } @llvm.genx.GenISA.add.pair(i32 %61, i32 %62, i32 %38, i32 %39)
  %444 = extractvalue { i32, i32 } %443, 0		; visa id: 398
  %445 = extractvalue { i32, i32 } %443, 1		; visa id: 398
  %446 = call { i32, i32 } @llvm.genx.GenISA.sub.pair(i32 0, i32 0, i32 %444, i32 %445)
  %447 = extractvalue { i32, i32 } %446, 0		; visa id: 400
  %448 = shl i32 %447, 2		; visa id: 401
  %449 = add i32 %66, %448		; visa id: 402
  %450 = shl i32 %83, 8		; visa id: 403
  %451 = lshr i32 %83, 24		; visa id: 404
  %452 = shl i32 %84, 8		; visa id: 405
  %453 = or i32 %452, %451		; visa id: 406
  %454 = shl i32 %228, 3		; visa id: 407
  %455 = shl i32 %454, 2		; visa id: 408
  %456 = add i32 %449, %455		; visa id: 409
  %457 = shl i32 %450, 2		; visa id: 410
  %458 = add i32 %456, %457		; visa id: 411
  %459 = extractelement <8 x float> %409, i32 0		; visa id: 412
  %460 = bitcast float %459 to i32		; visa id: 413
  %461 = inttoptr i32 %458 to i32 addrspace(131074)*
  call void @llvm.genx.GenISA.simdBlockWrite.p131074i32.i32(i32 addrspace(131074)* %461, i32 %460)		; visa id: 413
  %462 = add i32 %458, 64		; visa id: 415
  %463 = extractelement <8 x float> %409, i32 1		; visa id: 416
  %464 = bitcast float %463 to i32		; visa id: 417
  %465 = inttoptr i32 %462 to i32 addrspace(131074)*
  call void @llvm.genx.GenISA.simdBlockWrite.p131074i32.i32(i32 addrspace(131074)* %465, i32 %464)		; visa id: 417
  %466 = add i32 %458, 128		; visa id: 419
  %467 = extractelement <8 x float> %409, i32 2		; visa id: 420
  %468 = bitcast float %467 to i32		; visa id: 421
  %469 = inttoptr i32 %466 to i32 addrspace(131074)*
  call void @llvm.genx.GenISA.simdBlockWrite.p131074i32.i32(i32 addrspace(131074)* %469, i32 %468)		; visa id: 421
  %470 = add i32 %458, 192		; visa id: 423
  %471 = extractelement <8 x float> %409, i32 3		; visa id: 424
  %472 = bitcast float %471 to i32		; visa id: 425
  %473 = inttoptr i32 %470 to i32 addrspace(131074)*
  call void @llvm.genx.GenISA.simdBlockWrite.p131074i32.i32(i32 addrspace(131074)* %473, i32 %472)		; visa id: 425
  %474 = add i32 %458, 256		; visa id: 427
  %475 = extractelement <8 x float> %409, i32 4		; visa id: 428
  %476 = bitcast float %475 to i32		; visa id: 429
  %477 = inttoptr i32 %474 to i32 addrspace(131074)*
  call void @llvm.genx.GenISA.simdBlockWrite.p131074i32.i32(i32 addrspace(131074)* %477, i32 %476)		; visa id: 429
  %478 = add i32 %458, 320		; visa id: 431
  %479 = extractelement <8 x float> %409, i32 5		; visa id: 432
  %480 = bitcast float %479 to i32		; visa id: 433
  %481 = inttoptr i32 %478 to i32 addrspace(131074)*
  call void @llvm.genx.GenISA.simdBlockWrite.p131074i32.i32(i32 addrspace(131074)* %481, i32 %480)		; visa id: 433
  %482 = add i32 %458, 384		; visa id: 435
  %483 = extractelement <8 x float> %409, i32 6		; visa id: 436
  %484 = bitcast float %483 to i32		; visa id: 437
  %485 = inttoptr i32 %482 to i32 addrspace(131074)*
  call void @llvm.genx.GenISA.simdBlockWrite.p131074i32.i32(i32 addrspace(131074)* %485, i32 %484)		; visa id: 437
  %486 = add i32 %458, 448		; visa id: 439
  %487 = extractelement <8 x float> %409, i32 7		; visa id: 440
  %488 = bitcast float %487 to i32		; visa id: 441
  %489 = inttoptr i32 %486 to i32 addrspace(131074)*
  call void @llvm.genx.GenISA.simdBlockWrite.p131074i32.i32(i32 addrspace(131074)* %489, i32 %488)		; visa id: 441
  %490 = call { i32, i32 } @llvm.genx.GenISA.add.pair(i32 %450, i32 %453, i32 128, i32 0)
  %491 = extractvalue { i32, i32 } %490, 0		; visa id: 443
  %492 = shl i32 %491, 2		; visa id: 444
  %493 = add i32 %456, %492		; visa id: 445
  %494 = extractelement <8 x float> %442, i32 0		; visa id: 446
  %495 = bitcast float %494 to i32		; visa id: 447
  %496 = inttoptr i32 %493 to i32 addrspace(131074)*
  call void @llvm.genx.GenISA.simdBlockWrite.p131074i32.i32(i32 addrspace(131074)* %496, i32 %495)		; visa id: 447
  %497 = add i32 %493, 64		; visa id: 449
  %498 = extractelement <8 x float> %442, i32 1		; visa id: 450
  %499 = bitcast float %498 to i32		; visa id: 451
  %500 = inttoptr i32 %497 to i32 addrspace(131074)*
  call void @llvm.genx.GenISA.simdBlockWrite.p131074i32.i32(i32 addrspace(131074)* %500, i32 %499)		; visa id: 451
  %501 = add i32 %493, 128		; visa id: 453
  %502 = extractelement <8 x float> %442, i32 2		; visa id: 454
  %503 = bitcast float %502 to i32		; visa id: 455
  %504 = inttoptr i32 %501 to i32 addrspace(131074)*
  call void @llvm.genx.GenISA.simdBlockWrite.p131074i32.i32(i32 addrspace(131074)* %504, i32 %503)		; visa id: 455
  %505 = add i32 %493, 192		; visa id: 457
  %506 = extractelement <8 x float> %442, i32 3		; visa id: 458
  %507 = bitcast float %506 to i32		; visa id: 459
  %508 = inttoptr i32 %505 to i32 addrspace(131074)*
  call void @llvm.genx.GenISA.simdBlockWrite.p131074i32.i32(i32 addrspace(131074)* %508, i32 %507)		; visa id: 459
  %509 = add i32 %493, 256		; visa id: 461
  %510 = extractelement <8 x float> %442, i32 4		; visa id: 462
  %511 = bitcast float %510 to i32		; visa id: 463
  %512 = inttoptr i32 %509 to i32 addrspace(131074)*
  call void @llvm.genx.GenISA.simdBlockWrite.p131074i32.i32(i32 addrspace(131074)* %512, i32 %511)		; visa id: 463
  %513 = add i32 %493, 320		; visa id: 465
  %514 = extractelement <8 x float> %442, i32 5		; visa id: 466
  %515 = bitcast float %514 to i32		; visa id: 467
  %516 = inttoptr i32 %513 to i32 addrspace(131074)*
  call void @llvm.genx.GenISA.simdBlockWrite.p131074i32.i32(i32 addrspace(131074)* %516, i32 %515)		; visa id: 467
  %517 = add i32 %493, 384		; visa id: 469
  %518 = extractelement <8 x float> %442, i32 6		; visa id: 470
  %519 = bitcast float %518 to i32		; visa id: 471
  %520 = inttoptr i32 %517 to i32 addrspace(131074)*
  call void @llvm.genx.GenISA.simdBlockWrite.p131074i32.i32(i32 addrspace(131074)* %520, i32 %519)		; visa id: 471
  %521 = add i32 %493, 448		; visa id: 473
  %522 = extractelement <8 x float> %442, i32 7		; visa id: 474
  %523 = bitcast float %522 to i32		; visa id: 475
  %524 = inttoptr i32 %521 to i32 addrspace(131074)*
  call void @llvm.genx.GenISA.simdBlockWrite.p131074i32.i32(i32 addrspace(131074)* %524, i32 %523)		; visa id: 475
  ret void, !stats.blockFrequency.digits !441, !stats.blockFrequency.scale !442		; visa id: 477
}
